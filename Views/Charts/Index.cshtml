@model Dictionary<int, int>
@{
    ViewData["Title"] = "גרף";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>COVID-19 Statistics</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <label for="yearSelect">:בחר שנה</label>
    <select id="yearSelect">
        <option selected value="@DateTime.Now.Year">@DateTime.Now.Year</option>
        @for (int year = DateTime.Now.Year -1;year >= DateTime.Now.Year - 5; year--)
        {
            <option value="@year">@year</option>
        }
    </select>

    <canvas id="covidChart"></canvas>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const yearSelect = document.getElementById('yearSelect');
            let chartInstance;

            // Fetch initial data for the current year
            updateChart(yearSelect.value);

            // Event listener for year selection change
            yearSelect.addEventListener('change', function () {
                updateChart(yearSelect.value);
            });

            // Function to update the chart based on the selected year
            function updateChart(selectedYear) {
                fetch('Charts/GetChartData?year=' + selectedYear)
                    .then(response => response.json())
                    .then(data => {
                        const labels = Object.keys(data);
                        const dataValues = Object.values(data);
                        if (chartInstance) {
                            chartInstance.destroy(); // Destroy the previous chart instance
                        }
                        const ctx = document.getElementById('covidChart').getContext('2d');
                        chartInstance = new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: labels,
                                datasets: [{
                                    label: 'חולים פעילים לפי חודשים',
                                    data: dataValues,
                                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                                    borderColor: 'rgba(54, 162, 235, 1)',
                                    borderWidth: 1
                                }]
                            },
                            options: {
                                scales: {
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true
                                        }
                                    }]
                                }
                            }
                        });
                    })
                    .catch(error => {
                        console.error('Error fetching data:', error);
                    });
            }
        });
    </script>
</body>
</html>